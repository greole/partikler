language: cpp
sudo: false
compiler:
 - clang
 - gcc

dist: bionic
os:
  - linux
  - osx

jobs:
  allow_failures:
    - os: osx

env:
    - BUILD_TYPE=Debug CGAL=OFF
    - BUILD_TYPE=Release CGAL=OFF
    - BUILD_TYPE=Release CGAL=ON

addons:
  apt:
    update: true
    sources:
      - llvm-toolchain-bionic-8
    packages:
      - clang-6.0
      - libboost-all-dev
      - libyaml-cpp-dev
      - libmpfr-dev
      - libgmp-dev
      - libomp-dev
      - lcov

before_install:
  - pip install --user cpp-coveralls

install:
  # first we create a directory for the CMake binaries
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
  # we use wget to fetch the cmake binaries
  - travis_retry wget --no-check-certificate https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.tar.gz
  # extract the binaries; the output here is quite lengthy,
  # so we swallow it to not clutter up the travis console
  - tar -xvf cmake-3.13.0-Linux-x86_64.tar.gz > /dev/null
  - mv cmake-3.13.0-Linux-x86_64 cmake-install
  # add both the top-level directory and the bin directory from the archive
  # to the system PATH. By adding it to the front of the path we hide the
  # preinstalled CMake with our own.
  - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
  # don't forget to switch back to the main build directory once you are done
  - cd ${TRAVIS_BUILD_DIR}

before_script:
  - cmake --version
  - mkdir build
  - cd build
  - cmake -DBUILD_GOOGLE_TEST=ON  -DCOVERALLS=ON -DCGAL_SUPPORT=$CGAL -DBUILD_HDF5=ON -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..
  - make -j4

script:
  - ctest -VV -R "Partikler_Test"

after_script:
  if [ "$CGAL" -eq "ON"  ]
  then
    export CONFIG="../example/generate_boundaries/SPH.yaml"
  else
    export CONFIG="../example/droplet_formation/SPH.yaml"
  fi

  - ASAN_OPTIONS=detect_odr_violation=0 ./partikler --config=$CONFIG

